#compdef trucks
_trucks(){
  typeset -A opt_args;
  local context state state_descr line ret=1;
  local actions options commands;

  options=(
    "(-o --out)"{-o=,--out=}"[Output directory]:directory:_directories" 
    "(-n --name)"{-n=,--name=}"[Name for output files]" 
    "(-m --html)"{-m=,--html=}"[Template output file]:file:_files" 
    "(-s --css)"{-s=,--css=}"[Stylesheet output file]:file:_files" 
    "(-j --js)"{-j=,--js=}"[Javascript output file]:file:_files" 
    "*"{-t=,--transforms=}"[Run transform plugins]" 
    "*"{-p=,--protocols=}"[Enable protocol resolver plugins]" 
    "*"{-c=,--rc=}"[Configuration files to require]:file:_files" 
    "(-e --extract)"{-e=,--extract=}"[Extract shadow styles to directory]:directory:_directories" 
    "(-i --inject)"{-i=,--inject=}"[Inject shadow styles from directory]:directory:_directories" 
    "(-a --manifest)"{-a=,--manifest=}"[Write manifest to file]:file:_files" 
    "(-f --force)"{-f,--force}"[Force overwrite existing files]" 
    "--secure[Disable the http: protocol]" 
    "--print-imports[Print the file hierarchy]" 
    "--print-tree[Print the component tree hierarchy]" 
    "--print-manifest[Print the generated files manifest]" 
    "(-h --help)"{-h,--help}"[Display help and exit]" 
    "--version[Print the version and exit]"
  )

  actions=(
    ":file:_files -g '*.html'"
  )

  _arguments \
    $options \
    $actions && ret=0;

  (( $ret == 1 )) && _arguments \
    $options \
    $actions && ret=0;
  return $ret;
}

_trucks "$@"