{"version":3,"sources":["../src/parse.js"],"names":[],"mappings":";;AAAA,IAAM,OAAO,QAAQ,MAAR,CAAb;AACA,IAAM,KAAK,QAAQ,IAAR,CAAX;AACA,IAAM,UAAU,QAAQ,SAAR,CAAhB;;AAEA,IAAM,QAAQ,OAAd;AACA,IAAM,OAAO,MAAb;;AAEA,IAAM,QAAQ,OAAd;AACA,IAAM,SAAS,QAAf;;;;;;;AAOA,SAAS,MAAT,CAAgB,UAAhB,EAA4B,MAA5B,EAAoC,EAApC,EAAwC,EAAxC,EAA4C;AAC1C,MAAM,OAAO,WAAW,IAAxB;AACA,MAAM,OAAO,KAAK,OAAL,CAAa,IAAb,CAAb;AACA,MAAM,IAAI,WAAW,GAArB;;;AAGA,MAAG,GAAG,IAAH,KAAY,KAAf,EAAsB;AACpB,WAAO,GAAP,CAAW,IAAX,CACE,EAAC,MAAM,IAAP,EAAa,UAAU,EAAE,EAAF,EAAM,IAAN,GAAa,IAAb,EAAvB,EAA4C,QAAQ,IAApD,EADF;AAEA,WAAO,IAAP;;;AAGD,GAND,MAMM,IAAG,GAAG,IAAH,KAAY,IAAf,EAAqB;AAAA;AACzB,UAAM,OAAO,KAAK,SAAL,CAAe,KAAK,IAAL,CAAU,IAAV,EAAgB,EAAE,EAAF,EAAM,IAAN,CAAW,MAAX,CAAhB,CAAf,CAAb;AACA,SAAG,QAAH,CAAY,IAAZ,EAAkB,UAAC,GAAD,EAAM,QAAN,EAAmB;AACnC,YAAG,GAAH,EAAQ;AACN,iBAAO,GAAG,GAAH,CAAP;AACD;AACD,eAAO,GAAP,CAAW,IAAX,CAAgB,EAAC,MAAM,IAAP,EAAa,UAAU,SAAS,QAAT,EAAvB,EAAhB;AACA;AACD,OAND;AAFyB;AAS1B;AACF;;;;;;;AAOD,SAAS,OAAT,CAAiB,UAAjB,EAA6B,MAA7B,EAAqC,EAArC,EAAyC,EAAzC,EAA6C;AAC3C,MAAM,OAAO,WAAW,IAAxB;AACA,MAAM,OAAO,KAAK,OAAL,CAAa,IAAb,CAAb;AACA,MAAM,IAAI,WAAW,GAArB;AACA,MAAM,MAAM,EAAE,EAAF,EAAM,IAAN,CAAW,KAAX,CAAZ;;;AAGA,MAAG,CAAC,GAAJ,EAAS;AACP,WAAO,EAAP,CAAU,IAAV,CACE,EAAC,MAAM,IAAP,EAAa,UAAU,EAAE,EAAF,EAAM,IAAN,GAAa,IAAb,EAAvB,EAA4C,QAAQ,IAApD,EADF;AAEA,WAAO,IAAP;;;AAGD,GAND,MAMK;AAAA;AACH,UAAM,OAAO,KAAK,SAAL,CAAe,KAAK,IAAL,CAAU,IAAV,EAAgB,EAAE,EAAF,EAAM,IAAN,CAAW,KAAX,CAAhB,CAAf,CAAb;AACA,SAAG,QAAH,CAAY,IAAZ,EAAkB,UAAC,GAAD,EAAM,QAAN,EAAmB;AACnC,YAAG,GAAH,EAAQ;AACN,iBAAO,GAAG,GAAH,CAAP;AACD;AACD,eAAO,EAAP,CAAU,IAAV,CAAe,EAAC,MAAM,IAAP,EAAa,UAAU,SAAS,QAAT,EAAvB,EAAf;AACA;AACD,OAND;AAFG;AASJ;AACF;;;;;;;;AAQD,SAAS,IAAT,CAAc,MAAd,EAAsB,EAAtB,EAA0B;AACxB,MAAM,QAAQ,QAAQ,YAAR,CAAd;;AAEA,SAAO,EAAP,GAAY,OAAO,EAAP,IAAa,EAAzB;;;AAGA,MAAM,KAAK,OAAO,EAAP,CAAU,KAAV,EAAX;;AAEA,WAAS,IAAT,CAAc,GAAd,EAAmB;AACjB,QAAG,GAAH,EAAQ;AACN,aAAO,GAAG,GAAH,CAAP;AACD;;AAED,QAAM,SAAS,GAAG,KAAH,EAAf;AACA,QAAG,CAAC,MAAJ,EAAY;AACV,aAAO,IAAP;AACD;;AAED,QAAM,aAAa,EAAnB;;;AAGA,aAAS,SAAT,CAAmB,KAAnB,EAA0B;AACxB,UAAI,IAAI,MAAM,KAAd;AACA,aAAO;AACL,iBAAS;AACP,0BAAgB,wBAAC,IAAD,EAAU;AACxB,gBAAG,CAAC,KAAK,IAAN,IAAc,CAAC,EAAE,gBAAF,CAAmB,KAAK,IAAxB,CAAlB,EAAiD;AAC/C;AACD;;AAED,gBAAM,SAAS,KAAK,IAAL,CAAU,MAAzB;AACA,gBAAM,OAAO,KAAK,IAAL,CAAU,SAAvB;;AAEA,gBAAG,EAAE,kBAAF,CAAqB,MAArB,KACE,EAAE,YAAF,CAAe,OAAO,MAAtB,CADF,IAEE,OAAO,MAAP,CAAc,IAAd,KAAuB,KAFzB,IAGE,EAAE,YAAF,CAAe,OAAO,QAAtB,CAHF,IAIE,OAAO,QAAP,CAAgB,IAAhB,KAAyB,MAJ3B,IAKE,EAAE,eAAF,CAAkB,KAAK,CAAL,CAAlB,CALL,EAKiC;;;AAG/B,kBAAM,OAAO,KAAK,CAAL,EAAQ,KAArB;;;AAGA,yBAAW,IAAX,IAAmB,IAAnB;AACD;AACF;AAtBM;AADJ,OAAP;AA0BD;;;AAGD,QAAM,MAAM,MAAM,SAAN,CAAgB,OAAO,QAAvB,EAAiC;AAC3C,eAAS,CAAC,SAAD;AADkC,KAAjC,CAAZ;;AAIA,WAAO,GAAP,GAAa,GAAb;;;AAGA,WAAO,UAAP,GAAoB,UAApB;;AAEA;AACD;;AAED;AACD;;;;;;;AAOD,SAAS,QAAT,CAAkB,UAAlB,EAA8B,MAA9B,EAAsC,QAAtC,EAAgD,EAAhD,EAAoD,EAApD,EAAwD;;AAEtD,WAAS,IAAT,CAAc,GAAd,EAAmB;AACjB,QAAG,GAAH,EAAQ;AACN,aAAO,GAAG,GAAH,CAAP;AACD;;AAED,QAAM,KAAK,SAAS,KAAT,EAAX;AACA,QAAG,CAAC,EAAJ,EAAQ;AACN,aAAO,IAAP;AACD;;AAED,OAAG,UAAH,EAAe,MAAf,EAAuB,EAAvB,EAA2B,IAA3B;AACD;;AAED;AACD;;;;;;;AAOD,SAAS,SAAT,CAAmB,UAAnB,EAA+B,IAA/B,EAAqC,MAArC,EAA6C,EAA7C,EAAiD;AAC/C,WAAS,IAAT,CAAc,GAAd,EAAmB;AACjB,QAAG,GAAH,EAAQ;AACN,aAAO,GAAG,GAAH,CAAP;AACD;AACD,QAAM,aAAa,KAAK,KAAL,EAAnB;AACA,QAAG,CAAC,UAAJ,EAAgB;AACd,aAAO,IAAP;AACD;;AAED,QAAM,IAAI,WAAW,GAAX,GAAiB,QAAQ,IAAR,CAAa,WAAW,QAAxB,CAA3B;;;AAGA,QAAI,WAAW,EAAE,qCAAF,EAAyC,OAAzC,EAAf;;AAEA,aAAS,UAAT,EAAqB,MAArB,EAA6B,QAA7B,EAAuC,MAAvC,EAA+C,UAAC,GAAD,EAAS;AACtD,UAAG,GAAH,EAAQ;AACN,eAAO,GAAG,GAAH,CAAP;AACD;;;AAGD,iBAAW,EAAE,QAAF,EAAY,OAAZ,EAAX;AACA,eAAS,UAAT,EAAqB,MAArB,EAA6B,QAA7B,EAAuC,OAAvC,EAAgD,UAAC,GAAD,EAAS;AACvD,YAAG,GAAH,EAAQ;AACN,iBAAO,GAAG,GAAH,CAAP;AACD;;;AAGD,aAAK,MAAL,EAAa,IAAb;AACD,OAPD;AAQD,KAfD;AAgBD;;AAED;AACD;;;;;;;;;AASD,SAAS,MAAT,CAAgB,QAAhB,EAA0B,EAA1B,EAA8B;AAC5B,MAAM,OAAO,OAAO,IAAP,CAAY,QAAZ,CAAb;AACA,MAAM,SAAS,EAAC,KAAK,EAAN,EAAU,IAAI,EAAd,EAAf;;AAEA,WAAS,IAAT,CAAc,GAAd,EAAmB;AACjB,QAAG,GAAH,EAAQ;AACN,aAAO,GAAG,GAAH,CAAP;AACD;;AAED,QAAM,aAAa,KAAK,KAAL,EAAnB;AACA,QAAG,CAAC,UAAJ,EAAgB;AACd,aAAO,GAAG,IAAH,EAAS,MAAT,CAAP;AACD;AACD,cAAU,UAAV,EAAsB,SAAS,UAAT,CAAtB,EAA4C,MAA5C,EAAoD,IAApD;AACD;;AAED;AACD;;AAED,OAAO,OAAP,GAAiB,MAAjB","file":"parse.js","sourcesContent":["const path = require('path');\nconst fs = require('fs');\nconst cheerio = require('cheerio');\n\nconst STYLE = 'style';\nconst LINK = 'link';\n\nconst SKATE = 'skate';\nconst DEFINE = 'define';\n\n/**\n *  Compile all inline and external stylesheets to an array of CSS strings.\n *\n *  @private\n */\nfunction styles(definition, result, el, cb) {\n  const file = definition.file;\n  const base = path.dirname(file);\n  const $ = definition.dom;\n\n  // inline style element\n  if(el.name === STYLE) {\n    result.css.push(\n      {file: file, contents: $(el).text().trim(), inline: true});\n    return cb();\n\n  // external stylesheet reference\n  }else if(el.name === LINK) {\n    const href = path.normalize(path.join(base, $(el).attr('href')));\n    fs.readFile(href, (err, contents) => {\n      if(err) {\n        return cb(err); \n      } \n      result.css.push({file: href, contents: contents.toString()});\n      cb();\n    })\n  }\n}\n\n/**\n *  Compile all inline and external scripts to an array of Javascript strings.\n *\n *  @private\n */\nfunction scripts(definition, result, el, cb) {\n  const file = definition.file;\n  const base = path.dirname(file);\n  const $ = definition.dom;\n  const src = $(el).attr('src');\n\n  // inline script element\n  if(!src) {\n    result.js.push(\n      {file: file, contents: $(el).text().trim(), inline: true});\n    return cb();\n\n  // external script reference\n  }else{\n    const href = path.normalize(path.join(base, $(el).attr('src')));\n    fs.readFile(href, (err, contents) => {\n      if(err) {\n        return cb(err); \n      } \n      result.js.push({file: href, contents: contents.toString()});\n      cb();\n    })\n  }\n}\n\n/**\n *  Iterate all javascript strings parsing to an AST and extracting \n *  components definitions `skate.define()`.\n *\n *  @private\n */\nfunction defs(result, cb) {\n  const babel = require('babel-core');\n\n  result.js = result.js || [];\n\n  // do not modify result object\n  const js = result.js.slice();\n\n  function next(err) {\n    if(err) {\n      return cb(err); \n    }\n\n    const script = js.shift();\n    if(!script) {\n      return cb(); \n    }\n\n    const components = {};\n\n    // find skate.define() component declarations in the AST\n    function component(babel) {\n      var t = babel.types;\n      return {\n        visitor: {\n          CallExpression: (expr) => {\n            if(!expr.node || !t.isCallExpression(expr.node)) {\n              return; \n            }\n\n            const callee = expr.node.callee;\n            const args = expr.node.arguments;\n\n            if(t.isMemberExpression(callee)\n              && t.isIdentifier(callee.object)\n              && callee.object.name === SKATE\n              && t.isIdentifier(callee.property)\n              && callee.property.name === DEFINE\n              && t.isStringLiteral(args[0])) {\n\n              // this is the component name string literal, ie: x-component-foo\n              const name = args[0].value;\n\n              // map the AST expression node by component tag name\n              components[name] = expr;\n            } \n          }\n        }\n      }\n    }\n\n    // use our plugin to gather component definitions in the AST\n    const res = babel.transform(script.contents, {\n      plugins: [component]\n    });\n\n    script.res = res;\n\n    // inject list of components defined by each script\n    script.components = components;\n\n    next();\n  }\n\n  next();\n}\n\n/**\n *  Iterate the elements returned by a DOM query.\n *\n *  @private\n */\nfunction iterator(definition, result, elements, it, cb) {\n\n  function next(err) {\n    if(err) {\n      return cb(err); \n    }\n\n    const el = elements.shift();\n    if(!el) {\n      return cb(); \n    }\n\n    it(definition, result, el, next);\n  }\n\n  next();\n}\n\n/**\n *  Iterate the components for a collection of components.\n *\n *  @private\n */\nfunction component(collection, list, result, cb) {\n  function next(err) {\n    if(err) {\n      return cb(err); \n    }\n    const definition = list.shift();\n    if(!definition) {\n      return cb(); \n    }\n\n    const $ = definition.dom = cheerio.load(definition.contents);\n\n    // process styles first and maintain declaration order\n    let elements = $('style, link[rel=\"stylesheet\"][href]').toArray();\n\n    iterator(definition, result, elements, styles, (err) => {\n      if(err) {\n        return cb(err); \n      }\n\n      // process inline and external scripts\n      elements = $('script').toArray();\n      iterator(definition, result, elements, scripts, (err) => {\n        if(err) {\n          return cb(err); \n        }\n\n        // find component javascript definitions\n        defs(result, next);\n      });\n    })\n  }\n\n  next();\n}\n\n/**\n *  Parses the loaded file data to stylesheet and javascript strings.\n *\n *  @function parser\n *  @param {Object} contents The loaded file data.\n *  @param {Function} cb callback function.\n */\nfunction parser(contents, cb) {\n  const keys = Object.keys(contents);\n  const result = {css: [], js: []};\n\n  function next(err) {\n    if(err) {\n      return cb(err); \n    }\n\n    const collection = keys.shift();\n    if(!collection) {\n      return cb(null, result); \n    }\n    component(collection, contents[collection], result, next);\n  }\n\n  next();\n}\n\nmodule.exports = parser;\n"]}